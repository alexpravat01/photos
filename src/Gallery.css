/* --- Main Gallery Container --- */
.gallery-container {
  max-width: 95vw;
  margin: 60px auto;
}

/* =================================================================== */
/* Center the Isotope grid container                                   */
/* =================================================================== */
.gallery-grid {
  margin: 0 auto; /* Works with isFitWidth: true in JS to center the grid */
}

/* =================================================================== */
/* BASE WIDTHS (Desktop, 6 Columns)                                    */
/* =================================================================== */
.gallery-grid .grid-sizer {
width: calc((100% - 50px) / 6);
}
.gallery-grid .gallery-item.is-portrait,
.gallery-grid .gallery-item.is-vertical,
.gallery-grid .gallery-item.is-horizontal {
width: calc(((100% - 50px) / 6) * 2 + 10px);
}
.gallery-grid .gallery-item.is-ultrawide {
width: calc(((100% - 50px) / 6) * 4 + 30px);
}

/* =================================================================== */
/* ITEM STYLING - CORRECTED ANIMATION LOGIC                            */
/* =================================================================== */
.gallery-grid .gallery-item {
margin-bottom: 10px;
cursor: pointer;
}

/* 1. Define the blur-in animation from start to finish */
@keyframes blurInAndScale {
from {
  opacity: 0;
  transform: scale(0.95);
  filter: blur(100px);
}
to {
  opacity: 1;
  transform: scale(1);
  filter: blur(0);
}
}

/* 2. Set the initial state for the content */
.gallery-grid .gallery-item-content {
position: relative;
display: block;
height: 0;
/* 
  CRITICAL FIX: We set the final opacity to 1 here and let the animation
  handle the starting state. This prevents the conflict.
*/
opacity: 1; 
}

/* 3. When the item is NOT YET visible, it's invisible */
.gallery-grid .gallery-item:not(.is-visible) .gallery-item-content {
  opacity: 0;
}

/* 4. When the item IS visible, run the animation */
.gallery-grid .gallery-item.is-visible .gallery-item-content {
animation: blurInAndScale 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

.gallery-grid .gallery-item-content .lazy-load-image-background img {
top: 0;
left: 0;
width: 100%;
height: 100%;
object-fit: cover;
}

/* =================================================================== */
/* RESPONSIVE BREAKPOINTS (No changes needed here)                     */
/* =================================================================== */
@media (max-width: 1440px) { /* 4 Columns */
  .gallery-grid .grid-sizer { width: calc((100% - 30px) / 4); }
  .gallery-grid .gallery-item.is-portrait { width: calc((100% - 30px) / 4); }
  .gallery-grid .gallery-item.is-vertical,
  .gallery-grid .gallery-item.is-horizontal { width: calc(((100% - 30px) / 4) * 2 + 10px); }
  .gallery-grid .gallery-item.is-ultrawide { width: 100%; }
}

@media (max-width: 992px) { /* 2 Columns */
  .gallery-grid .grid-sizer { width: calc((100% - 10px) / 2); }
  .gallery-grid .gallery-item.is-portrait,
  .gallery-grid .gallery-item.is-vertical { width: calc((100% - 10px) / 2); }
  .gallery-grid .gallery-item.is-horizontal,
  .gallery-grid .gallery-item.is-ultrawide { width: 100%; }
}

@media (max-width: 576px) { /* 1 Column */
  .gallery-grid .grid-sizer,
  .gallery-grid .gallery-item.is-portrait,
  .gallery-grid .gallery-item.is-vertical,
  .gallery-grid .gallery-item.is-horizontal,
  .gallery-grid .gallery-item.is-ultrawide {
    width: 100%;
  }
}

/* =================================================================== /
/ REFINED LIGHTBOX THUMBNAIL STYLES                                   /
/ =================================================================== */
/* 1. Make all thumbnails perfect squares */

.yarl__thumbnails_thumbnail {
border: none !important;
border-radius: 8px !important; /* A slightly larger radius looks great on squares */
}
/* 2. Style the image INSIDE the thumbnail to cover the square area */
.yarl__thumbnails_thumbnail img {
object-fit: cover;
}
/* 3. Base style for all thumbnails (dim, small, blurred) */
.yarl__thumbnails_thumbnail {
opacity: 0.9;
transform: scale(0.85);
filter: blur(1.5px);
transition: opacity 0.4s ease, transform 0.4s ease, filter 0.4s ease;
}
/* 4. Style for the CURRENTLY SELECTED thumbnail (bright, big, sharp) */
.yarl__thumbnails_thumbnail_active {
opacity: 1;
transform: scale(1);
filter: blur(0);
}
/* 5. Style for the thumbnails IMMEDIATELY NEXT to the active one */
.yarl__thumbnails_thumbnail_active + .yarl__thumbnails_thumbnail {
opacity: 0.95;
transform: scale(0.9);
filter: blur(1px);
}
/* 6. Fix for the "flashing" bug */
.yarl__thumbnails_track {
will-change: transform;
}